I"µ$<h2 id="tl-dr">TL; DR:</h2>

<ul>
  <li>AI-driven auto-tagging of digital assets (like images) aids in search, discovery, and workflow routing.</li>
  <li>Generic auto-tagging is often frustrating because it adds noise and doesn‚Äôt provide the tags you are looking for.</li>
  <li>Custom models that are trained on a handful of manual tags can tag exactly what you are looking for.</li>
  <li>It is a common misconception that training custom models require tons of data, a team of AI experts, and a lot of time.</li>
  <li>Custom auto-tagging can be implemented in hours, not weeks, and without any AI expertise. I show you how you can do it in three minutes <a href="https://www.loom.com/share/b71afe551eab40e3ab8baefd1f86a16a?sid=e54f559e-91c2-4f69-91c6-6c0e056e06f0">in this short video.</a></li>
</ul>

<h2 id="auto-tagging-in-digital-asset-management">Auto-tagging in digital asset management</h2>

<p>Digital asset management (DAM) platforms help curate and manage large amounts of assets like photos. Businesses use DAM platforms to manage images for e-commerce, marketing departments, product inventory, art, photography, and much more.</p>

<p>Tagging images with metadata is important in DAM for two reasons:</p>

<ul>
  <li><strong>It allows search and discovery.</strong> For example, if you want to find images of ‚Äúyellow Jeep Wranglers on a beach,‚Äù one way to do that is through <a href="https://www.nyckel.com/semantic-image-search">semantic search</a>, which allows you to search a database of images using text. However, tagging the images with metadata about the contents of the image is another common way to enable this.</li>
  <li><strong>It enables workflows based on the contents of the image.</strong> For example, if you want to kick off a process to remove the background in all images tagged with ‚Äúsneakers.‚Äù</li>
</ul>

<p>Even though tagging is important, it is infeasible to tag large numbers of images manually. As a result, DAM platforms and users have been turning to AI-based auto-tagging to tag their assets without much effort.</p>

<h2 id="the-problem-with-generic-auto-tagging">The problem with generic auto-tagging</h2>

<p>Several APIs provide generic auto-tagging of images. For example, <a href="https://cloud.google.com/vision/docs/drag-and-drop">this one</a> from Google, <a href="https://aws.amazon.com/rekognition/image-features/">this one</a> from AWS, and <a href="https://portal.vision.cognitive.azure.com/demo/generic-image-tagging">this one</a> from Microsoft Azure. These APIs are easy to use and integrate into your DAM solution, but they have two big flaws:</p>

<ul>
  <li>They don‚Äôt always give you the tag(s) you care about.</li>
  <li>They add noise by adding tags that you don‚Äôt care about.</li>
</ul>

<p>Let‚Äôs look at an illustrative example. Say you manage images of construction equipment, and you want to tag photos of <a href="https://en.wikipedia.org/wiki/Telescopic_handler">telehandlers</a>. Let‚Äôs look at the tags that Google‚Äôs API provides for an image of a telehandler:</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/generic_tagging_dam.webp" alt="Google's tagging AI's response to an image of a telehandler" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/generic_tagging_dam.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>

<p>There are two things worth noting:</p>

<ul>
  <li>Google doesn‚Äôt tag the image as a telehandler (or anything close).</li>
  <li>It returns tags like ‚Äúmachine,‚Äù which you don‚Äôt care about because all your photos are of machines.</li>
</ul>

<h2 id="the-solution-custom-trained-auto-tagging">The solution: custom-trained auto-tagging</h2>

<p>Unlike generic auto-tagging, you can train custom AI models to tag the exact things you care about and nothing else. Let‚Äôs look at some use cases we‚Äôve seen from our customers:</p>

<ul>
  <li>Tagging stock photography that matches a particular aesthetic</li>
  <li>Tagging content with <a href="https://www.nyckel.com/blog/iab-classification/">IAB taxonomy</a></li>
  <li>Make, model, and viewport tagging of car photos (<a href="https://www.nyckel.com/public-functions/vehicle-models-image-classifier">this public model</a> does just that)<a href="https://www.nyckel.com/public-functions/vehicle-models-image-classifier"></a></li>
  <li>Detecting rooms and features in real estate photos. For example, detecting that a photo is of a kitchen and that it has an island and stainless steel appliances.</li>
  <li><a href="https://www.nyckel.com/blog/logo-identifier-how-to-detect-your-logo-with-a-custom-image-classifier/">Custom logo detection</a> for smaller brands that are not well-served by generic logo detectors</li>
</ul>

<h2 id="myths-about-custom-trained-models">Myths about custom-trained models</h2>

<p>You might wonder why everyone doesn‚Äôt use custom-trained auto-tagging if it‚Äôs so effective. Unfortunately, there are a few common <strong>misconceptions</strong> about what it takes to implement it that hold people back:</p>

<ul>
  <li><strong>Misconception 1: You need a lot of data to train a custom model</strong>. Modern models can be fine-tuned to your use case, using just a tiny amount of data. In this <a href="https://www.nyckel.com/blog/image-classification-benchmark-google-vs-aws-vs-hugging-face-vs-nyckel/">image classification benchmark</a>, we saw ~75% accuracy from just <em>five</em> examples per tag.</li>
  <li><strong>Misconception 2: You need a team of AI experts to implement it</strong>. AutoML platforms like Nyckel do the work of an AI expert and hide the gory details behind a simple <a href="https://www.nyckel.com/docs">API</a>. Here is an example in python where we train a model to distinguish cats from dogs, and then invoke it:</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">nyckel</span> <span class="kn">import</span> <span class="n">User</span><span class="p">,</span> <span class="n">ImageClassificationFunction</span>

<span class="n">user</span> <span class="o">=</span> <span class="n">User</span><span class="p">(</span><span class="n">client_id</span><span class="o">=</span><span class="s">"..."</span><span class="p">,</span> <span class="n">client_secret</span><span class="o">=</span><span class="s">"..."</span><span class="p">)</span>

<span class="n">func</span> <span class="o">=</span> <span class="n">ImageClassificationFunction</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="s">"IsCatOrDog"</span><span class="p">,</span> <span class="n">user</span><span class="p">)</span>

<span class="c1"># provide a few examples of cats and dogs to train a model
</span><span class="n">func</span><span class="p">.</span><span class="n">create_samples</span><span class="p">([</span>
    <span class="p">(</span><span class="s">"cat1.jpg"</span><span class="p">,</span> <span class="s">"cat"</span><span class="p">),</span>
    <span class="p">(</span><span class="s">"cat2.jpg"</span><span class="p">,</span> <span class="s">"cat"</span><span class="p">),</span>
    <span class="p">(</span><span class="s">"dog1.jpg"</span><span class="p">,</span> <span class="s">"dog"</span><span class="p">),</span>
    <span class="p">(</span><span class="s">"dog2.jpg"</span><span class="p">,</span> <span class="s">"dog"</span><span class="p">)])</span>

<span class="c1"># check if an image has a cat or dog
</span><span class="n">prediction</span> <span class="o">=</span> <span class="n">func</span><span class="p">.</span><span class="n">invoke</span><span class="p">(</span><span class="s">"cat_or_dog.jpg"</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li><strong>Misconception 3: It takes a lot of time to implement custom auto-tagging</strong>: Nyckel‚Äôs models train in roughly 60 seconds. <a href="https://www.nyckel.com/customers">Several of our customers</a> have gone from finding us to using their model in production within 24 hours. Some of our customers have trained 3,000+ models because it‚Äôs so easy, fast, and inexpensive.</li>
</ul>

<p>These myths were all true a few years ago, so they are not outright lies. But recent developments in AI research and <a href="https://www.nyckel.com/blog/automl-platform-9-features-your-solution-should-include/">user-friendly AutoML platforms</a> mean they are not true anymore and should not hold you back.</p>

<h2 id="it-doesnt-have-to-be-that-hard">It doesn‚Äôt have to be that hard</h2>

<p>Here is a short video showing me training, deploying, and using a custom trained model to detect telehandlers, all in under three minutes!</p>

<p align="center"><iframe style="text-align:center" width="512" height="421" src="https://www.loom.com/embed/b71afe551eab40e3ab8baefd1f86a16a?sid=1fa7d442-c411-4f93-ab03-36112bbef114" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe></p>

<h2 id="get-in-touch">Get in touch</h2>

<p><a href="https://www.nyckel.com/console">Try us out</a> for free or <a href="mailto:feedback@nyckel.com">get in touch</a> with our team to chat about your DAM use case.</p>
:ET