I"n<p>It‚Äôs often valuable to be able to programmatically classify an image into a category. For example, let‚Äôs say you‚Äôre making a recipe website, and you‚Äôd like to be able to categorize food images to organize your site. You might define the categories as:</p>

<ul>
  <li>Breakfasts</li>
  <li>Main courses</li>
  <li>Soups</li>
  <li>Desserts</li>
  <li>Not a food</li>
</ul>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/image-classification-foods.webp" alt="Image classification via machine learning" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/image-classification-foods.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>

<p>Giant leaps in machine learning research over the last few years has made this possible for computers to solve. This article walks through how to add this type of image classification to your application in just a few minutes using Nyckel, the custom machine learning API platform.</p>

<p>First, head to Nyckel and click ‚ÄúGet Started‚Äù to create a free account. One logged in, you‚Äôll see your list of functions. Click ‚ÄúNew Function‚Äù to create your image classification function.</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/create-nyckel-function.webp" alt="Click ‚ÄúNew Function‚Äù to get started" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/create-nyckel-function.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>

<p>Next, you‚Äôll define the name, inputs and outputs of your function. To continue the example from above, I chose ‚ÄúImage‚Äù inputs and ‚ÄúChoose 1‚Äù (category) output, and defined the labels I had described above.</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/define-inputs.webp" alt="Defining the inputs and outputs of your machine learning function" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/define-inputs.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>
<p>After clicking ‚ÄúCreate‚Äù, it‚Äôs time to upload some photos that will be used for training. Make sure to upload several photos of each type you defined above so the algorithm can be trained to recognize each of your types.</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/upload-photos.webp" alt="Upload a set of images that can be used to train your function" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/upload-photos.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>
<p>After clicking import, it‚Äôs time to start training your machine learning model to meet your needs by simply clicking the correct label for each photo. I click ‚ÄúMain course‚Äù for the hot dog and ‚ÄúDessert‚Äù for the donuts below.</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/annotate-data.webp" alt="Click the corresponding label to train your machine learning model" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/annotate-data.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>
<p>After training just 30 samples, Nyckel can then make predictions on the rest of your images.</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/grade-quiz.webp" alt="Grade a quiz to see how well your machine learning model predicts your images" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/grade-quiz.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>
<p>If you annotate more data, Nyckel will retrain your model to make it even more accurate. The accuracy bars in green above show a 95.9% accuracy. This is calculated via ‚Äúcross-validation‚Äù of your data. A chunk of data is excluded from the model, then predicted using a model trained on the rest of the labeled data and compared to your provided labels. These accuracy bars give a solid estimate of how likely your model will be to correctly classify new images in the future. After labeling the 20 additional samples, our model is now at 100% accuracy!</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/nyckel-accuracy.webp" alt="Nyckel function showing 100% accuracy" class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/nyckel-accuracy.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>
<p>Now that your model is trained up, you can call it on new images from your application! Clicking the ‚ÄúInvoke‚Äù option on the menu lets you test your image classifier. You can see below it classified the picture of mousse as ‚ÄúDessert‚Äù with 79% confidence. This is with only 50 images annotated. The more you train, the more accurate your function will be with higher confidence!</p>

<figure class="figure">

    

    

    

    
        <div class="post-img">
        <!-- Add the 'boxed' class if 'box' attribute is 'yes' -->
        <img src="../images/2021/nyckel-prediction.webp" alt="Nyckel predicts this image is of dessert with 79.5% confidence." class="" style="border-radius: 20px; max-width: 100%" srcset="../images/2021/nyckel-prediction.webp 2x%" loading="lazy" />
    </div>
    <figcaption></figcaption>
        

</figure>
<p>The real magic happens when you add your function to your application via the Rest API. In fact, everything you can do through the Nyckel website, you can also do via Rest API. For example, you can add input images, label them, and of course call your function. Here‚Äôs a curl request that executes an HTTP POST to invoke this function:</p>

<p>You can even call this function yourself from the command line to try classifying a food image. Note that this function was defined as public so anyone can call it without authentication. You‚Äôll probably want to keep yours private to ensure others can‚Äôt access your function.</p>

<p>Add your own function‚Äôs HTTP POST to your application, and voila! You have a machine learning powered image classifier built into your application!</p>
:ET