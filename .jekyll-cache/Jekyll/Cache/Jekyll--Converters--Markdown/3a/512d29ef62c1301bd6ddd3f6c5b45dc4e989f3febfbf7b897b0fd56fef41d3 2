I"M<p>Our customers very quickly see the value that Nyckel brings - someone with zero knowledge of machine learning
is able to train and deploy custom image and text classification functions within minutes. As a result, we got
requests to support more than just image and text inputs. The most popular request was to support tabular input
data with multiple columns of different types.</p>

<h2 id="tabular-data-classification-beta">Tabular Data Classification (beta)</h2>

<p>Today, we are releasing tabular data classification as a beta feature. Here is a 3-minute video of it in action:</p>

<p class="youtube">
    <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/bgoJAh8-twI" title="Tabular Data Classification using Nyckel" frameborder="0" style="border-radius: 5px;" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
</p>

<p>In the above video, Jeremy used one of the most popular datasets on kaggle - the
<a href="https://www.kaggle.com/c/titanic">titanic dataset</a>. It lists data on titanic passengers (name, age,
number of siblings, ticket class, etc.) with a column that indicates whether the passenger survived the shipwreck.
The challenge is to create a model that predicts which passengers survived.</p>

<p>In less that two minutes, we are able to go from the data to a trained and deployed model.
Underneath this serene user experience, there is a lot going on:</p>

<ul>
  <li>Training-optimized cloud hardware is allocated</li>
  <li>Several state-of-the-art deep neural networks and hyper-parameters are evaluated to find the best fit for your data</li>
  <li>Your model is deployed on inference-optimized and elastically scalable cloud hardware, behind a secure REST API</li>
</ul>

<h2 id="uploading-data">Uploading Data</h2>

<p>You can upload your data as a csv. The csv must have a header row with column names. For each column in your csv, you
can either ignore the column or use it as one of the inputs to the model. You can optionally select an output column.
This column must contain one of the output labels that you defined when creating the function, either in text form
as the label name or a numerical zero-based label position index.</p>

<h2 id="supported-data-types">Supported Data Types</h2>

<p>We currently support the following data types for columns:</p>

<ul>
  <li>Numerical - use this for numbers of any kind</li>
  <li>Text - use this for anything textual, whether thatâ€™s free-form text or a category</li>
</ul>

<p>We donâ€™t yet support date/time as a first-class data-type. You can either convert it to a number like unix epoch
timestamp, or leave it as text and choose a text datatype.</p>

<p>We will add more data types in the future. Drop us a line to tell us the data types youâ€™d like to see supported.</p>

<h2 id="beta-limitations">Beta Limitations</h2>

<p>The beta has a few known limitations:</p>

<ul>
  <li>The first row of your CSV must contain column names, and the names must be unique. Also make sure your column names match from your first CSV upload to subsequent ones.</li>
  <li>The output label names have to be pre-declared when you create a function. Any output column value that doesnâ€™t match
the declared label names (or numerical label position index) will be ignored.</li>
  <li>We only support text and numerical data types. When in doubt, use the text data type. Drop us a line to let us know
what other data types youâ€™d like to see supported.</li>
</ul>

<h2 id="feedback">Feedback</h2>

<p>We are always surprised and impressed by the variety of use-cases that our customers use us for, and weâ€™re excited for
the new use-cases that this feature enables. Weâ€™d love to hear your feedback - use the <code class="language-plaintext highlighter-rouge">Contact Us</code> button on your
function page to share your thoughts.</p>
:ET